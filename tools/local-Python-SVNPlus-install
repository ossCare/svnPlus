#! /bin/bash -norc
set -u
NAME=${0##*/};
DIRE=${0%/*}; if [[ -z "${DIRE}" ]]; then DIRE="."; fi;
              if [[ "${DIRE}" = "${NAME}" ]]; then DIRE="."; fi;
DIRE="$(cd ${DIRE}; echo ${PWD})";
TAB="	"; # must be a TAB not a run of spaces
unset CDPATH; # because when bash (I love it!) is involved, CDPATH can hose up a subshell/make, etc.
unset BASH_ENV;
unset ENV;       # unset the ENV environmental variable so any
                 # Korn shells below this line do not attempt to
                 # source it. Ditto for BASH_ENV
# the environment variable
#    ECHO
# is examined, if it is TRUE/YES/ON (case insensitve)
# then turn on shell debugging
case ${ECHO:-null} in
     [Tt][Rr][Uu][Ee] ) set -x ;;
     [Yy][Ee][Ss]     ) set -x ;;
     [Oo][Nn]         ) set -x ;;
esac

# create a suite of temp files and then functions to clean them up
TDIR=${TMPDIR:-/tmp}; # why examine TMPDIR? see tmpnam(3), but DO NOT export TDIR
T0=${TDIR}/${NAME}-$$-0;
T1=${TDIR}/${NAME}-$$-1;
T2=${TDIR}/${NAME}-$$-2;
T3=${TDIR}/${NAME}-$$-3;
T4=${TDIR}/${NAME}-$$-4;
T5=${TDIR}/${NAME}-$$-5;
T6=${TDIR}/${NAME}-$$-6;
T7=${TDIR}/${NAME}-$$-7;
T8=${TDIR}/${NAME}-$$-8;
T9=${TDIR}/${NAME}-$$-9;

LISTFILE='svnplus.list.txt';

function RmTmps { # usage: RmTmps - will clear all the tmp files
    /bin/rm -f ${T0} ${T1} ${T2} ${T3} ${T4} ${T5} ${T6} ${T7} ${T8} ${T9}
}

# this function will clean up temp files then exit
function Exit { # usage: Exit N (N defaults to zero (0))
    __evalue=${?}; # grab the most recent exit status
    if   (( ${#} !=  0  )); then
        __evalue=${1};
    fi;
    RmTmps;
    if (( __evalue )); then
        echo "${NAME}: exit = ${__evalue} from pwd=$(/bin/pwd -P)" 1>&2;
    fi;
    exit ${__evalue};
}

function EError { Error "${@}"; Exit 1; }
function Error  { oV=${VERBOSE}; VERBOSE=1; Verbose ${@} VERBOSE=${oV}; }

function Verbose {
    if (( VERBOSE > 0 )); then
        (
            _n='';
            if (( ${#} > 0 )); then
               if [[ "${1}" = "-n" ]]; then _n=-n; fi;
               echo ${_n} ${NAME}: "${@}";
            else
               echo '';
            fi;
        ) 1>&2;
    fi;
}

trap "Exit 2" 1 2 15; # exit if hit with HUP, INT or TERM signals, you can extend this list
if (( ${#} == 0)); then set -- --help; fi;

let DEF_VERBOSE=1 || true; let VERBOSE=-1 || true;
let DEF_CLEAN=1   || true; let CLEAN=-1   || true;
let DEF_XLEAN=0   || true; let XLEAN=-1   || true;
    DEF_VERSION="";            VERSION="";

if [[ ${OSTYPE} =~ darwin* ]]; then
    KILLDIR="/Library/Python/2.7/site-packages";
else
    KILLDIR="/usr/lib/python2.7/site-packages";
fi;
GOTO="${DIRE}/../tagProtect";
DEF_TARDIR="${GOTO}/PERL-Object"
DEF_TARDIR="$(cd ${DEF_TARDIR} 2>/dev/null;  echo ${PWD})";

USAGE="
usage: ${NAME} [options]

   locally installs/reinstalls svnPlus
";

while (( ${#} > 0 )); do
    case "${1}" in # (((((((((((((((((
        --help      | -h    ) echo "${USAGE}"; exit 0;;
        --run       | -r | -) : ;; # ignore it
        --clean     | -c    ) let CLEAN=1 || true;;
        --noclean   | -C    ) let CLEAN=0 || true;;
        --no-clean          ) let CLEAN=0 || true;;
        --extra*    | -e    ) let XLEAN=1 || true;;
        --x*        | -x    ) let XLEAN=1 || true;;
        --noextra*  | -E    ) let XLEAN=0 || true;;
        --no-extra*         ) let XLEAN=0 || true;;
                      -X    ) let XLEAN=1 || true;;
        --verbose   | -v    ) if (( VERBOSE <= 0 )); then let VERBOSE=1 || true; else let VERBOSE++ || true; fi;;
        --verbose=0         ) let VERBOSE=0 || true;;
        --verbose=[1-9]*    ) let VERBOSE=${1#--verbose=} || exit 1;;
        --v0                ) let VERBOSE=0 || true;;
        --v[1-9]*           ) let VERBOSE=${1#-v} || exit 1;;
        --noverbose | -V    ) let VERBOSE=0 || true;;
                           *) echo "${NAME}: arg \"${1}\" unrecognized, aborting!" 1>&2; Exit 1;;
    esac;
    shift; # off the one just done
done

if (( VERBOSE < 0 )); then VERBOSE=${DEF_VERBOSE}; fi;
if (( CLEAN < 0 )); then CLEAN=${DEF_CLEAN}; fi;
if (( XLEAN < 0 )); then XLEAN=${DEF_XLEAN}; fi;
if (( XLEAN > 0 )); then CLEAN=1; fi;
if [[ "${TARDIR:-not set}" = "not set" ]]; then TARDIR="${DEF_TARDIR}"; fi;
cd "${TARDIR}" || {
     Error ${NAME}: current directory is ${PWD};
    EError ${NAME}: failed to cd to ${TARDIR};
}

(
   cd "${KILLDIR}" || exit 1;
   sudo /bin/rm -rf svnplus*;
) ||  {
   EError "failed to remove previous install at: ${KILLDIR}";
}

estat=0;
(
/bin/pwd -P
echo sudo python setup.py install --record ${LISTFILE}
) 1>&2;
     sudo python setup.py install --record ${LISTFILE} > /dev/null 2>${T0} || estat=1;
WC=$(wc -l < ${T0});
if (( WC > 1 )); then
# if [[ -s ${T0} ]]; then
   /bin/cat ${T0} 1>&2;
   Exit 1;
fi;
if (( estat )); then
    Error "FAILED: PWD=${PWD}";
    EError "FAILED: sudo python setup.py install --record ${LISTFILE}";
fi;

(
/bin/pwd -P
echo sudo python setup.py clean
) 1>&2;
sudo python setup.py clean || {
    Error "FAILED: PWD=${PWD}";
    EError "sudo python setup.py clean FAILED";
}
Verbose sudo chown -R ${U}: build dist svnplus.egg-info ${LISTFILE};
     sudo chown -R ${U}: build dist svnplus.egg-info ${LISTFILE};
if (( CLEAN )); then
    Verbose /bin/rm -rf build/ dist/ svnplus.egg-info/
         /bin/rm -rf build/ dist/ svnplus.egg-info/
    if (( XLEAN )); then
        Verbose /bin/rm -f svnplus.list.txt
             /bin/rm -f svnplus.list.txt
    fi;
fi;
Exit;
